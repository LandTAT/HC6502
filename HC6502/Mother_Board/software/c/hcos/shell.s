;
; File generated by cc65 v 2.17 - Git 180bb082
;
	.fopt		compiler,"cc65 v 2.17 - Git 180bb082"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		_strtoul
	.import		_strcmp
	.import		_strlen
	.import		_memset
	.import		_uart_printf
	.import		_gpio_init
	.import		_gpio_write
	.import		_gpio_read
	.import		_ps2_process
	.export		_shell_cmd
	.export		_argc
	.export		_argv
	.export		_ci
	.export		_cook
	.export		_gi
	.export		_gi_get
	.export		_shell

.segment	"DATA"

_shell_cmd:
	.word	$0000
_argv:
	.word	$0000
	.res	10,$00
_ci:
	.addr	L0005
	.addr	_cmd_read
	.addr	L0008
	.addr	L000A
	.addr	_cmd_write
	.addr	L000D
	.addr	L000F
	.addr	_cmd_exec
	.addr	L0012
	.addr	L0014
	.addr	_cmd_dumpw
	.addr	L0017
	.addr	L0019
	.addr	_cmd_dumpb
	.addr	L001C
	.addr	L001E
	.addr	_cmd_gpio
	.addr	L0021
	.addr	L0023
	.addr	_cmd_help
	.addr	L0026
_gi:
	.byte	$56,$49,$41,$31,$5F,$50,$41,$30,$00
	.res	7,$00
	.dword	$7F2000A0
	.byte	$56,$49,$41,$31,$5F,$50,$41,$31,$00
	.res	7,$00
	.dword	$7F2000A1
	.byte	$56,$49,$41,$31,$5F,$50,$41,$32,$00
	.res	7,$00
	.dword	$7F2000A2
	.byte	$56,$49,$41,$31,$5F,$50,$41,$33,$00
	.res	7,$00
	.dword	$7F2000A3
	.byte	$56,$49,$41,$31,$5F,$50,$41,$34,$00
	.res	7,$00
	.dword	$7F2000A4
	.byte	$56,$49,$41,$31,$5F,$50,$41,$35,$00
	.res	7,$00
	.dword	$7F2000A5
	.byte	$56,$49,$41,$31,$5F,$50,$41,$36,$00
	.res	7,$00
	.dword	$7F2000A6
	.byte	$56,$49,$41,$31,$5F,$50,$41,$37,$00
	.res	7,$00
	.dword	$7F2000A7
	.byte	$56,$49,$41,$31,$5F,$50,$42,$30,$00
	.res	7,$00
	.dword	$7F2000B0
	.byte	$56,$49,$41,$31,$5F,$50,$42,$31,$00
	.res	7,$00
	.dword	$7F2000B1
	.byte	$56,$49,$41,$31,$5F,$50,$42,$32,$00
	.res	7,$00
	.dword	$7F2000B2
	.byte	$56,$49,$41,$31,$5F,$50,$42,$33,$00
	.res	7,$00
	.dword	$7F2000B3
	.byte	$56,$49,$41,$31,$5F,$50,$42,$34,$00
	.res	7,$00
	.dword	$7F2000B4
	.byte	$56,$49,$41,$31,$5F,$50,$42,$35,$00
	.res	7,$00
	.dword	$7F2000B5
	.byte	$56,$49,$41,$31,$5F,$50,$42,$36,$00
	.res	7,$00
	.dword	$7F2000B6
	.byte	$56,$49,$41,$31,$5F,$50,$42,$37,$00
	.res	7,$00
	.dword	$7F2000B7
	.byte	$56,$49,$41,$32,$5F,$50,$41,$30,$00
	.res	7,$00
	.dword	$7F4000A0
	.byte	$56,$49,$41,$32,$5F,$50,$41,$31,$00
	.res	7,$00
	.dword	$7F4000A1
	.byte	$56,$49,$41,$32,$5F,$50,$41,$32,$00
	.res	7,$00
	.dword	$7F4000A2
	.byte	$56,$49,$41,$32,$5F,$50,$41,$33,$00
	.res	7,$00
	.dword	$7F4000A3
	.byte	$56,$49,$41,$32,$5F,$50,$41,$34,$00
	.res	7,$00
	.dword	$7F4000A4
	.byte	$56,$49,$41,$32,$5F,$50,$41,$35,$00
	.res	7,$00
	.dword	$7F4000A5
	.byte	$56,$49,$41,$32,$5F,$50,$41,$36,$00
	.res	7,$00
	.dword	$7F4000A6
	.byte	$56,$49,$41,$32,$5F,$50,$41,$37,$00
	.res	7,$00
	.dword	$7F4000A7
	.byte	$56,$49,$41,$32,$5F,$50,$42,$30,$00
	.res	7,$00
	.dword	$7F4000B0
	.byte	$56,$49,$41,$32,$5F,$50,$42,$31,$00
	.res	7,$00
	.dword	$7F4000B1
	.byte	$56,$49,$41,$32,$5F,$50,$42,$32,$00
	.res	7,$00
	.dword	$7F4000B2
	.byte	$56,$49,$41,$32,$5F,$50,$42,$33,$00
	.res	7,$00
	.dword	$7F4000B3
	.byte	$56,$49,$41,$32,$5F,$50,$42,$34,$00
	.res	7,$00
	.dword	$7F4000B4
	.byte	$56,$49,$41,$32,$5F,$50,$42,$35,$00
	.res	7,$00
	.dword	$7F4000B5
	.byte	$56,$49,$41,$32,$5F,$50,$42,$36,$00
	.res	7,$00
	.dword	$7F4000B6
	.byte	$56,$49,$41,$32,$5F,$50,$42,$37,$00
	.res	7,$00
	.dword	$7F4000B7

.segment	"RODATA"

L0008:
	.byte	$72,$20,$20,$20,$20,$20,$5B,$61,$64,$64,$72,$5D,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$72,$65,$61,$64,$20,$20,$20,$20,$61,$6E
	.byte	$79,$20,$61,$64,$64,$72,$00
L0017:
	.byte	$64,$75,$6D,$70,$77,$20,$5B,$61,$64,$64,$72,$5D,$20,$5B,$77,$6F
	.byte	$72,$64,$5F,$6E,$75,$6D,$5D,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$64,$75,$6D,$70,$20,$20,$20,$20,$61,$6E
	.byte	$79,$20,$61,$64,$64,$72,$00
L000D:
	.byte	$77,$20,$20,$20,$20,$20,$5B,$61,$64,$64,$72,$5D,$20,$5B,$64,$61
	.byte	$74,$61,$5D,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$77,$72,$69,$74,$65,$20,$20,$20,$61,$6E
	.byte	$79,$20,$61,$64,$64,$72,$00
L0012:
	.byte	$78,$20,$20,$20,$20,$20,$5B,$61,$64,$64,$72,$5D,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$65,$78,$65,$63,$75,$74,$65,$20,$61,$6E
	.byte	$79,$20,$61,$64,$64,$72,$00
L001C:
	.byte	$64,$75,$6D,$70,$62,$20,$5B,$61,$64,$64,$72,$5D,$20,$5B,$62,$79
	.byte	$74,$65,$5F,$6E,$75,$6D,$5D,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$64,$75,$6D,$70,$20,$20,$20,$20,$61,$6E
	.byte	$79,$20,$61,$64,$64,$72,$00
L0026:
	.byte	$68,$65,$6C,$70,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$70,$72,$69,$6E,$74,$20,$63,$6D,$64,$20
	.byte	$69,$6E,$66,$6F,$00
L0021:
	.byte	$67,$70,$69,$6F,$20,$20,$69,$6E,$69,$74,$7C,$72,$65,$61,$64,$7C
	.byte	$77,$72,$69,$74,$65,$20,$5B,$56,$49,$41,$31,$5F,$50,$41,$30,$2E
	.byte	$2E,$2E,$5D,$20,$20,$20,$63,$74,$72,$6C,$20,$61,$6E,$79,$20,$67
	.byte	$70,$69,$6F,$00
L0092:
	.byte	$65,$78,$65,$63,$20,$30,$78,$25,$78,$20,$28,$30,$78,$25,$78,$20
	.byte	$30,$78,$25,$78,$20,$30,$78,$25,$78,$20,$30,$78,$25,$78,$29,$20
	.byte	$72,$65,$74,$75,$72,$6E,$20,$30,$78,$25,$78,$0D,$0A,$00
L0233:
	.byte	$67,$70,$69,$6F,$20,$69,$6E,$69,$74,$20,$5B,$67,$70,$69,$6F,$5F
	.byte	$6E,$75,$6D,$5D,$20,$5B,$69,$6E,$7C,$6F,$75,$74,$5D,$0D,$0A,$00
L0222:
	.byte	$75,$6E,$6B,$6E,$6F,$77,$6E,$20,$67,$70,$69,$6F,$20,$6E,$75,$6D
	.byte	$20,$5B,$25,$73,$5D,$0D,$0A,$00
L025E:
	.byte	$67,$70,$69,$6F,$20,$72,$65,$61,$64,$20,$72,$65,$74,$75,$72,$6E
	.byte	$20,$25,$64,$0D,$0A,$00
L02FA:
	.byte	$69,$6C,$6C,$65,$67,$61,$6C,$20,$63,$6D,$64,$20,$5B,$25,$73,$5D
	.byte	$20,$0D,$0A,$00
L024D:
	.byte	$75,$6E,$6B,$6E,$6F,$77,$6E,$20,$6D,$6F,$64,$65,$20,$5B,$25,$73
	.byte	$5D,$0D,$0A,$00
L0064:
	.byte	$5B,$30,$78,$25,$78,$5D,$20,$3C,$2D,$20,$28,$30,$78,$25,$78,$29
	.byte	$0D,$0A,$00
L00C3:
	.byte	$0D,$0A,$5B,$30,$78,$25,$30,$34,$78,$5D,$3A,$20,$00
L0117	:=	L00C3+0
L0305:
	.byte	$72,$65,$74,$75,$72,$6E,$20,$30,$78,$25,$78,$00
L00AC	:=	L00C3+2
L00E8	:=	L00C3+2
L028C:
	.byte	$25,$73,$3A,$09,$09,$25,$73,$0D,$0A,$00
L0030:
	.byte	$5B,$30,$78,$25,$78,$5D,$3A,$20,$00
L00B8:
	.byte	$30,$78,$25,$30,$34,$78,$20,$00
L030A:
	.byte	$0D,$0A,$68,$63,$6F,$73,$23,$00
L0039	:=	L0092+39
L0266:
	.byte	$77,$72,$69,$74,$65,$00
L0019:
	.byte	$64,$75,$6D,$70,$62,$00
L012E:
	.byte	$25,$30,$32,$78,$20,$00
L0014:
	.byte	$64,$75,$6D,$70,$77,$00
L0101	:=	L012E+0
L001E	:=	L0021+47
L0023:
	.byte	$68,$65,$6C,$70,$00
L022B:
	.byte	$69,$6E,$69,$74,$00
L0257:
	.byte	$72,$65,$61,$64,$00
L0245:
	.byte	$6F,$75,$74,$00
L0137:
	.byte	$20,$20,$20,$00
L014B	:=	L0092+43
L0145:
	.byte	$25,$63,$00
L023A:
	.byte	$69,$6E,$00
L00C8	:=	L0092+43
L0111	:=	L0145+0
L02EF	:=	L0092+43
L027B	:=	L0092+43
L0106	:=	L0137+1
L013A	:=	L0137+1
L000F	:=	L0305+10
L000A	:=	L0014+4
L0270:
	.byte	$30,$00
L0005	:=	L0008+53

.segment	"BSS"

_argc:
	.res	1,$00

; ---------------------------------------------------------------
; long __near__ cmd_read (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_cmd_read: near

.segment	"CODE"

	jsr     decsp3
	lda     _argv+2
	ldx     _argv+2+1
	jsr     pushax
	jsr     push0
	jsr     _strtoul
	ldy     #$01
	jsr     staxysp
	lda     #<(L0030)
	ldx     #>(L0030)
	jsr     pushax
	ldy     #$06
	jsr     pushwysp
	ldy     #$04
	jsr     _uart_printf
	ldy     #$02
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	sta     (sp),y
	lda     #<(L0039)
	ldx     #>(L0039)
	jsr     pushax
	ldy     #$02
	lda     (sp),y
	jsr     pusha0
	ldy     #$04
	jsr     _uart_printf
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	jmp     incsp3

.endproc

; ---------------------------------------------------------------
; long __near__ cmd_write (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_cmd_write: near

.segment	"CODE"

	jsr     decsp7
	ldx     #$00
	lda     _argc
	cmp     #$03
	bcs     L030D
	dex
	stx     sreg
	stx     sreg+1
	txa
	jmp     incsp7
L030D:	lda     _argc
	jsr     decax2
	ldy     #$01
	jsr     staxysp
	cpx     #$00
	bne     L0045
	cmp     #$11
L0045:	bcs     L0046
	ldy     #$02
	jsr     ldaxysp
	jmp     L0048
L0046:	ldx     #$00
	lda     #$10
L0048:	ldy     #$01
	jsr     staxysp
	lda     _argv+2
	ldx     _argv+2+1
	jsr     pushax
	jsr     push0
	jsr     _strtoul
	ldy     #$03
	jsr     staxysp
	ldx     #$00
	txa
L030F:	ldy     #$05
	jsr     staxysp
	ldy     #$01
	cmp     (sp),y
	txa
	iny
	sbc     (sp),y
	bcs     L0051
	ldy     #$06
	jsr     ldaxysp
	jsr     incax2
	jsr     aslax1
	clc
	adc     #<(_argv)
	tay
	txa
	adc     #>(_argv)
	tax
	tya
	jsr     pushw
	jsr     push0
	jsr     _strtoul
	ldy     #$00
	sta     (sp),y
	ldy     #$06
	jsr     ldaxysp
	clc
	ldy     #$03
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	ldy     #$00
	lda     (sp),y
	sta     (ptr1),y
	lda     #<(L0064)
	ldx     #>(L0064)
	jsr     pushax
	ldy     #$08
	jsr     ldaxysp
	clc
	ldy     #$05
	adc     (sp),y
	pha
	txa
	iny
	adc     (sp),y
	tax
	pla
	jsr     pushax
	ldy     #$04
	lda     (sp),y
	jsr     pusha0
	ldy     #$06
	jsr     _uart_printf
	ldy     #$06
	jsr     ldaxysp
	jsr     incax1
	jmp     L030F
L0051:	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	jmp     incsp7

.endproc

; ---------------------------------------------------------------
; long __near__ cmd_exec (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_cmd_exec: near

.segment	"CODE"

	ldy     #$10
	jsr     subysp
	lda     _argv+2
	ldx     _argv+2+1
	jsr     pushax
	jsr     push0
	jsr     _strtoul
	ldy     #$0A
	jsr     staxysp
	lda     _argv+4
	ldx     _argv+4+1
	jsr     pushax
	jsr     push0
	jsr     _strtoul
	ldy     #$08
	jsr     staxysp
	lda     _argv+6
	ldx     _argv+6+1
	jsr     pushax
	jsr     push0
	jsr     _strtoul
	ldy     #$06
	jsr     staxysp
	lda     _argv+8
	ldx     _argv+8+1
	jsr     pushax
	jsr     push0
	jsr     _strtoul
	ldy     #$04
	jsr     staxysp
	lda     _argv+10
	ldx     _argv+10+1
	jsr     pushax
	jsr     push0
	jsr     _strtoul
	ldy     #$02
	jsr     staxysp
	ldy     #$0B
	jsr     ldaxysp
	jsr     stax0sp
	jsr     pushax
	ldy     #$0D
	jsr     pushwysp
	ldy     #$0D
	jsr     pushwysp
	ldy     #$0D
	jsr     pushwysp
	ldy     #$0D
	jsr     pushwysp
	ldy     #$09
	jsr     ldaxysp
	jsr     callax
	jsr     incsp2
	ldy     #$0C
	jsr     steaxysp
	lda     #<(L0092)
	ldx     #>(L0092)
	jsr     pushax
	ldy     #$0F
	jsr     pushwysp
	ldy     #$0F
	jsr     pushwysp
	ldy     #$0F
	jsr     pushwysp
	ldy     #$0F
	jsr     pushwysp
	ldy     #$0F
	jsr     pushwysp
	ldy     #$1B
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$10
	jsr     _uart_printf
	ldy     #$0F
	jsr     ldeaxysp
	ldy     #$10
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; long __near__ cmd_dumpw (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_cmd_dumpw: near

.segment	"CODE"

	ldy     #$0A
	jsr     subysp
	lda     _argv+2
	ldx     _argv+2+1
	jsr     pushax
	jsr     push0
	jsr     _strtoul
	ldy     #$02
	jsr     staxysp
	lda     _argv+4
	ldx     _argv+4+1
	jsr     pushax
	jsr     push0
	jsr     _strtoul
	jsr     stax0sp
	ldy     #$03
	jsr     ldaxysp
	ldy     #$04
	jsr     staxysp
	lda     #<(L00AC)
	ldx     #>(L00AC)
	jsr     pushax
	ldy     #$09
	jsr     pushwysp
	ldy     #$04
	jsr     _uart_printf
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	ldy     #$06
	jsr     steaxysp
L00B0:	ldy     #$09
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$05
	jsr     ldaxysp
	jsr     axulong
	jsr     tosulteax
	beq     L00B1
	lda     #<(L00B8)
	ldx     #>(L00B8)
	jsr     pushax
	ldy     #$09
	jsr     pushwysp
	ldy     #$0D
	jsr     ldeaxysp
	jsr     saveeax
	ldy     #$01
	jsr     inceaxy
	ldy     #$0A
	jsr     steaxysp
	jsr     resteax
	jsr     aslax1
	jsr     tosaddax
	jsr     pushw
	ldy     #$04
	jsr     _uart_printf
	ldy     #$09
	jsr     ldeaxysp
	jsr     pusheax
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	jsr     tosneeax
	beq     L00B0
	ldy     #$09
	jsr     ldeaxysp
	ldx     #$00
	and     #$03
	jsr     push0ax
	txa
	jsr     toseqeax
	beq     L00B0
	lda     #<(L00C3)
	ldx     #>(L00C3)
	jsr     pushax
	ldy     #$09
	jsr     pushwysp
	ldy     #$0D
	jsr     ldeaxysp
	jsr     aslax1
	jsr     tosaddax
	jsr     pushax
	ldy     #$04
	jsr     _uart_printf
	jmp     L00B0
L00B1:	lda     #<(L00C8)
	ldx     #>(L00C8)
	jsr     pushax
	ldy     #$02
	jsr     _uart_printf
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	ldy     #$0A
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; long __near__ cmd_dumpb (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_cmd_dumpb: near

.segment	"CODE"

	ldy     #$22
	jsr     subysp
	lda     _argv+2
	ldx     _argv+2+1
	jsr     pushax
	jsr     push0
	jsr     _strtoul
	ldy     #$06
	jsr     staxysp
	lda     _argv+4
	ldx     _argv+4+1
	jsr     pushax
	jsr     push0
	jsr     _strtoul
	ldy     #$04
	jsr     staxysp
	ldy     #$07
	jsr     ldaxysp
	ldy     #$18
	jsr     staxysp
	ldy     #$05
	jsr     ldaxysp
	jsr     shrax4
	ldy     #$02
	jsr     staxysp
	ldy     #$04
	lda     (sp),y
	ldx     #$00
	and     #$0F
	jsr     stax0sp
	lda     #<(L00E8)
	ldx     #>(L00E8)
	jsr     pushax
	ldy     #$1D
	jsr     pushwysp
	ldy     #$04
	jsr     _uart_printf
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	ldy     #$1E
	jsr     steaxysp
L00EC:	ldy     #$21
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$07
	jsr     ldaxysp
	jsr     axulong
	jsr     tosulteax
	jeq     L00ED
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	ldy     #$1A
	jsr     steaxysp
L00F4:	ldy     #$1D
	jsr     ldeaxysp
	cmp     #$10
	txa
	sbc     #$00
	lda     sreg
	sbc     #$00
	lda     sreg+1
	sbc     #$00
	bcs     L00F5
	lda     #$08
	jsr     leaa0sp
	ldy     #$1A
	clc
	adc     (sp),y
	pha
	txa
	iny
	adc     (sp),y
	tax
	pla
	jsr     pushax
	ldy     #$1D
	jsr     pushwysp
	ldy     #$25
	jsr     ldeaxysp
	jsr     shleax4
	jsr     pusheax
	ldy     #$25
	jsr     ldeaxysp
	jsr     tosaddeax
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	jsr     staspidx
	lda     #<(L0101)
	ldx     #>(L0101)
	jsr     pushax
	lda     #$0A
	jsr     leaa0sp
	ldy     #$1C
	clc
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	ldx     #$00
	lda     (ptr1,x)
	jsr     pusha0
	ldy     #$04
	jsr     _uart_printf
	ldy     #$1D
	jsr     ldeaxysp
	jsr     saveeax
	ldy     #$01
	jsr     inceaxy
	ldy     #$1A
	jsr     steaxysp
	jsr     resteax
	jmp     L00F4
L00F5:	lda     #<(L0106)
	ldx     #>(L0106)
	jsr     pushax
	ldy     #$02
	jsr     _uart_printf
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	ldy     #$1A
	jsr     steaxysp
L0108:	ldy     #$1D
	jsr     ldeaxysp
	cmp     #$10
	txa
	sbc     #$00
	lda     sreg
	sbc     #$00
	lda     sreg+1
	sbc     #$00
	bcs     L0109
	lda     #<(L0111)
	ldx     #>(L0111)
	jsr     pushax
	lda     #$0A
	jsr     leaa0sp
	ldy     #$1C
	clc
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	jsr     pusha
	jsr     _cook
	jsr     pushax
	ldy     #$04
	jsr     _uart_printf
	ldy     #$1D
	jsr     ldeaxysp
	jsr     saveeax
	ldy     #$01
	jsr     inceaxy
	ldy     #$1A
	jsr     steaxysp
	jsr     resteax
	jmp     L0108
L0109:	lda     #<(L0117)
	ldx     #>(L0117)
	jsr     pushax
	ldy     #$1D
	jsr     pushwysp
	ldy     #$25
	jsr     ldeaxysp
	ldy     #$01
	jsr     inceaxy
	jsr     shleax4
	jsr     tosaddax
	jsr     pushax
	ldy     #$04
	jsr     _uart_printf
	ldy     #$21
	jsr     ldeaxysp
	jsr     saveeax
	ldy     #$01
	jsr     inceaxy
	ldy     #$1E
	jsr     steaxysp
	jsr     resteax
	jmp     L00EC
L00ED:	ldy     #$00
	lda     (sp),y
	iny
	ora     (sp),y
	jeq     L013D
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	ldy     #$1A
	jsr     steaxysp
L011F:	ldy     #$1D
	jsr     ldeaxysp
	cmp     #$10
	txa
	sbc     #$00
	lda     sreg
	sbc     #$00
	lda     sreg+1
	sbc     #$00
	jcs     L0120
	ldy     #$1D
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$05
	jsr     ldaxysp
	jsr     axulong
	jsr     tosulteax
	beq     L0127
	lda     #$08
	jsr     leaa0sp
	ldy     #$1A
	clc
	adc     (sp),y
	pha
	txa
	iny
	adc     (sp),y
	tax
	pla
	jsr     pushax
	ldy     #$1D
	jsr     pushwysp
	ldy     #$25
	jsr     ldeaxysp
	jsr     shleax4
	jsr     pusheax
	ldy     #$25
	jsr     ldeaxysp
	jsr     tosaddeax
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	jsr     staspidx
	lda     #<(L012E)
	ldx     #>(L012E)
	jsr     pushax
	lda     #$0A
	jsr     leaa0sp
	ldy     #$1C
	clc
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	ldx     #$00
	lda     (ptr1,x)
	jsr     pusha0
	ldy     #$04
	jmp     L0310
L0127:	lda     #$08
	jsr     leaa0sp
	ldy     #$1A
	clc
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	lda     #$20
	ldy     #$00
	sta     (ptr1),y
	lda     #<(L0137)
	ldx     #>(L0137)
	jsr     pushax
	ldy     #$02
L0310:	jsr     _uart_printf
	ldy     #$1D
	jsr     ldeaxysp
	jsr     saveeax
	ldy     #$01
	jsr     inceaxy
	ldy     #$1A
	jsr     steaxysp
	jsr     resteax
	jmp     L011F
L0120:	lda     #<(L013A)
	ldx     #>(L013A)
	jsr     pushax
	ldy     #$02
	jsr     _uart_printf
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	ldy     #$1A
	jsr     steaxysp
L013C:	ldy     #$1D
	jsr     ldeaxysp
	cmp     #$10
	txa
	sbc     #$00
	lda     sreg
	sbc     #$00
	lda     sreg+1
	sbc     #$00
	bcs     L013D
	lda     #<(L0145)
	ldx     #>(L0145)
	jsr     pushax
	lda     #$0A
	jsr     leaa0sp
	ldy     #$1C
	clc
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	jsr     pusha
	jsr     _cook
	jsr     pushax
	ldy     #$04
	jsr     _uart_printf
	ldy     #$1D
	jsr     ldeaxysp
	jsr     saveeax
	ldy     #$01
	jsr     inceaxy
	ldy     #$1A
	jsr     steaxysp
	jsr     resteax
	jmp     L013C
L013D:	lda     #<(L014B)
	ldx     #>(L014B)
	jsr     pushax
	ldy     #$02
	jsr     _uart_printf
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	ldy     #$22
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; long __near__ cmd_gpio (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_cmd_gpio: near

.segment	"CODE"

	jsr     decsp3
	lda     _argv+4
	ldx     _argv+4+1
	jsr     pushax
	jsr     _gi_get
	ldy     #$01
	jsr     staxysp
	cpx     #$00
	bne     L021E
	cmp     #$00
	bne     L021E
	lda     #<(L0222)
	ldx     #>(L0222)
	jsr     pushax
	lda     _argv+4
	ldx     _argv+4+1
	jsr     pushax
	ldy     #$04
	jsr     _uart_printf
	ldx     #$FF
	stx     sreg
	stx     sreg+1
	txa
	jmp     incsp3
L021E:	lda     _argv+2
	ldx     _argv+2+1
	jsr     pushax
	lda     #<(L022B)
	ldx     #>(L022B)
	jsr     _strcmp
	cpx     #$00
	jne     L0227
	cmp     #$00
	jne     L0227
	lda     _argv+6
	ora     _argv+6+1
	bne     L022E
	lda     #<(L0233)
	ldx     #>(L0233)
	jsr     pushax
	ldy     #$02
	jsr     _uart_printf
	ldx     #$FF
	stx     sreg
	stx     sreg+1
	txa
	jmp     incsp3
L022E:	lda     _argv+6
	ldx     _argv+6+1
	jsr     pushax
	lda     #<(L023A)
	ldx     #>(L023A)
	jsr     _strcmp
	cpx     #$00
	bne     L0236
	cmp     #$00
	bne     L0236
	ldy     #$02
	jsr     ldaxysp
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	lda     #$00
	jsr     pusha
	jsr     _gpio_init
	jmp     L0276
L0236:	lda     _argv+6
	ldx     _argv+6+1
	jsr     pushax
	lda     #<(L0245)
	ldx     #>(L0245)
	jsr     _strcmp
	cpx     #$00
	bne     L0241
	cmp     #$00
	bne     L0241
	ldy     #$02
	jsr     ldaxysp
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	lda     #$01
	jsr     pusha
	jsr     _gpio_init
	jmp     L0276
L0241:	lda     #<(L024D)
	ldx     #>(L024D)
	jsr     pushax
	lda     _argv+6
	ldx     _argv+6+1
	jsr     pushax
	ldy     #$04
	jsr     _uart_printf
	ldx     #$FF
	stx     sreg
	stx     sreg+1
	txa
	jmp     incsp3
L0227:	lda     _argv+2
	ldx     _argv+2+1
	jsr     pushax
	lda     #<(L0257)
	ldx     #>(L0257)
	jsr     _strcmp
	cpx     #$00
	bne     L0253
	cmp     #$00
	bne     L0253
	ldy     #$02
	jsr     ldaxysp
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	jsr     _gpio_read
	ldy     #$00
	sta     (sp),y
	lda     #<(L025E)
	ldx     #>(L025E)
	jsr     pushax
	ldy     #$02
	lda     (sp),y
	jsr     pusha0
	ldy     #$04
	jsr     _uart_printf
	jmp     L0276
L0253:	lda     _argv+2
	ldx     _argv+2+1
	jsr     pushax
	lda     #<(L0266)
	ldx     #>(L0266)
	jsr     _strcmp
	cpx     #$00
	bne     L0276
	cmp     #$00
	bne     L0276
	ldy     #$02
	jsr     ldaxysp
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	lda     #$01
	jsr     pusha
	jsr     _gpio_init
	lda     _argv+6
	ldx     _argv+6+1
	jsr     pushax
	lda     #<(L0270)
	ldx     #>(L0270)
	jsr     _strcmp
	cpx     #$00
	bne     L026C
	cmp     #$00
	bne     L026C
	ldy     #$02
	jsr     ldaxysp
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	lda     #$00
	jmp     L0312
L026C:	ldy     #$02
	jsr     ldaxysp
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	lda     #$01
L0312:	jsr     pusha
	jsr     _gpio_write
L0276:	lda     #<(L027B)
	ldx     #>(L027B)
	jsr     pushax
	ldy     #$02
	jsr     _uart_printf
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	jmp     incsp3

.endproc

; ---------------------------------------------------------------
; long __near__ cmd_help (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_cmd_help: near

.segment	"CODE"

	jsr     decsp4
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	jsr     steax0sp
L027F:	jsr     ldeax0sp
	cmp     #$07
	txa
	sbc     #$00
	lda     sreg
	sbc     #$00
	lda     sreg+1
	sbc     #$00
	bcs     L0280
	lda     #<(L028C)
	ldx     #>(L028C)
	jsr     pushax
	ldy     #$05
	jsr     ldeaxysp
	jsr     mulax6
	clc
	adc     #<(_ci)
	tay
	txa
	adc     #>(_ci)
	tax
	tya
	jsr     pushw
	ldy     #$07
	jsr     ldeaxysp
	jsr     mulax6
	clc
	adc     #<(_ci)
	tay
	txa
	adc     #>(_ci)
	tax
	tya
	ldy     #$05
	jsr     pushwidx
	ldy     #$06
	jsr     _uart_printf
	jsr     ldeax0sp
	jsr     saveeax
	ldy     #$01
	jsr     inceaxy
	jsr     steax0sp
	jsr     resteax
	jmp     L027F
L0280:	ldy     #$00
	jsr     _ps2_process
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ cook (unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_cook: near

.segment	"CODE"

	ldy     #$00
	lda     (sp),y
	cmp     #$20
	ldx     #$00
	bcc     L0316
	lda     (sp),y
	cmp     #$7F
	bcs     L0316
	jmp     incsp1
L0316:	lda     #$2E
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; __near__ struct gpio_info * __near__ gi_get (__near__ unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_gi_get: near

.segment	"CODE"

	jsr     decsp2
	ldy     #$02
	lda     (sp),y
	iny
	ora     (sp),y
	bne     L0200
	tax
	jmp     incsp4
L0200:	ldx     #$00
	txa
L0319:	jsr     stax0sp
	ldy     #$01
	lda     (sp),y
	cmp     #$00
	bne     L020E
	dey
	lda     (sp),y
	cmp     #$20
L020E:	bcs     L0205
	jsr     pushw0sp
	lda     #$14
	jsr     tosmula0
	clc
	adc     #<(_gi)
	tay
	txa
	adc     #>(_gi)
	tax
	tya
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	jsr     _strcmp
	cpx     #$00
	bne     L0206
	cmp     #$00
	bne     L0206
	jsr     pushw0sp
	lda     #$14
	jsr     tosmula0
	clc
	adc     #<(_gi)
	tay
	txa
	adc     #>(_gi)
	tax
	tya
	jmp     incsp4
L0206:	jsr     ldax0sp
	jsr     incax1
	jmp     L0319
L0205:	ldx     #$00
	txa
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; long __near__ parse_cmd (__near__ unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_parse_cmd: near

.segment	"CODE"

	jsr     decsp8
	lda     #>(_argv)
	sta     ptr1+1
	lda     #<(_argv)
	sta     ptr1
	lda     #$00
	ldy     #$0B
L031A:	sta     (ptr1),y
	dey
	bpl     L031A
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	jsr     steax0sp
	ldy     #$04
	jsr     steaxysp
L029E:	ldy     #$0B
	jsr     pushwysp
	ldy     #$09
	jsr     ldeaxysp
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	bne     L02A8
	jmp     L031F
L02A6:	ldy     #$07
	jsr     ldeaxysp
	jsr     saveeax
	ldy     #$01
	jsr     inceaxy
	ldy     #$04
	jsr     steaxysp
	jsr     resteax
L02A8:	ldy     #$0B
	jsr     pushwysp
	ldy     #$09
	jsr     ldeaxysp
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	cmp     #$20
	beq     L02A6
	jsr     ldeax0sp
	jsr     saveeax
	ldy     #$01
	jsr     inceaxy
	jsr     steax0sp
	jsr     resteax
	jsr     aslax1
	clc
	adc     #<(_argv)
	tay
	txa
	adc     #>(_argv)
	tax
	tya
	jsr     pushax
	ldy     #$0D
	jsr     pushwysp
	ldy     #$0B
	jsr     ldeaxysp
	jsr     tosaddax
	ldy     #$00
	jsr     staxspidx
	jsr     ldeax0sp
	jsr     pusheax
	ldx     #$00
	stx     sreg
	stx     sreg+1
	lda     #$06
	jsr     toseqeax
	beq     L02B5
	jmp     L029F
L02B3:	ldy     #$07
	jsr     ldeaxysp
	jsr     saveeax
	ldy     #$01
	jsr     inceaxy
	ldy     #$04
	jsr     steaxysp
	jsr     resteax
L02B5:	ldy     #$0B
	jsr     pushwysp
	ldy     #$09
	jsr     ldeaxysp
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	cmp     #$20
	jeq     L029E
	ldy     #$0B
	jsr     pushwysp
	ldy     #$09
	jsr     ldeaxysp
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	bne     L02B3
	jmp     L029E
L029F:	ldy     #$00
L031F:	lda     (sp),y
	sta     _argc
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	ldy     #$04
	jsr     steaxysp
L02BE:	ldy     #$0B
	jsr     pushwysp
	ldy     #$09
	jsr     ldeaxysp
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     (ptr1,x)
	beq     L0320
	ldy     #$0B
	jsr     pushwysp
	ldy     #$09
	jsr     ldeaxysp
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	cmp     #$20
	bne     L02C0
	ldy     #$0B
	jsr     pushwysp
	ldy     #$09
	jsr     ldeaxysp
	jsr     tosaddax
	sta     sreg
	stx     sreg+1
	lda     #$00
	tay
	sta     (sreg),y
L02C0:	ldy     #$07
	jsr     ldeaxysp
	jsr     saveeax
	ldy     #$01
	jsr     inceaxy
	ldy     #$04
	jsr     steaxysp
	jsr     resteax
	jmp     L02BE
L0320:	sta     sreg
	sta     sreg+1
	ldy     #$0A
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; long __near__ get_cmd_index (__near__ unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_get_cmd_index: near

.segment	"CODE"

	jsr     decsp4
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	jsr     steax0sp
L02CF:	jsr     ldeax0sp
	cmp     #$07
	txa
	sbc     #$00
	lda     sreg
	sbc     #$00
	lda     sreg+1
	sbc     #$00
	bcs     L02D0
	jsr     ldeax0sp
	jsr     mulax6
	clc
	adc     #<(_ci)
	tay
	txa
	adc     #>(_ci)
	tax
	tya
	jsr     pushw
	ldy     #$07
	jsr     ldaxysp
	jsr     _strcmp
	cpx     #$00
	bne     L02D1
	cmp     #$00
	bne     L02D1
	jsr     ldeax0sp
	jmp     incsp6
L02D1:	jsr     ldeax0sp
	jsr     saveeax
	ldy     #$01
	jsr     inceaxy
	jsr     steax0sp
	jsr     resteax
	jmp     L02CF
L02D0:	ldx     #$FF
	stx     sreg
	stx     sreg+1
	txa
	jmp     incsp6

.endproc

; ---------------------------------------------------------------
; long __near__ shell (__near__ unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_shell: near

.segment	"RODATA"

L02ED:
	.word	$0000
L0300:
	.word	$0000

.segment	"CODE"

	jsr     decsp8
	jsr     pushl0
	ldy     #$0D
	jsr     ldaxysp
	jsr     _strlen
	jsr     axulong
	ldy     #$04
	jsr     steaxysp
	ldy     #$07
	jsr     ldeaxysp
	jsr     pusheax
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	jsr     toseqeax
	beq     L02E8
	ldx     #$00
	txa
	jsr     steax0sp
	jmp     L02EC
L02E8:	lda     #<(L02EF)
	ldx     #>(L02EF)
	jsr     pushax
	ldy     #$02
	jsr     _uart_printf
	ldy     #$0F
	jsr     pushwysp
	jsr     _parse_cmd
	lda     _argv
	ldx     _argv+1
	jsr     pushax
	jsr     _get_cmd_index
	ldy     #$08
	jsr     steaxysp
	jsr     pusheax
	ldx     #$FF
	stx     sreg
	stx     sreg+1
	txa
	jsr     toseqeax
	beq     L02F3
	lda     #<(L02FA)
	ldx     #>(L02FA)
	jsr     pushax
	lda     _argv
	ldx     _argv+1
	jsr     pushax
	ldy     #$04
	jsr     _uart_printf
	ldx     #$FF
	stx     sreg
	stx     sreg+1
	txa
	jsr     steax0sp
	jmp     L02EC
L02F3:	ldy     #$0B
	jsr     ldeaxysp
	jsr     mulax6
	clc
	adc     #<(_ci)
	tay
	txa
	adc     #>(_ci)
	tax
	tya
	ldy     #$03
	jsr     ldaxidx
	jsr     callax
	jsr     steax0sp
	lda     #<(L0305)
	ldx     #>(L0305)
	jsr     pushax
	ldy     #$05
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$06
	jsr     _uart_printf
L02EC:	lda     #<(L030A)
	ldx     #>(L030A)
	jsr     pushax
	ldy     #$02
	jsr     _uart_printf
	jsr     ldeax0sp
	ldy     #$0E
	jmp     addysp

.endproc

