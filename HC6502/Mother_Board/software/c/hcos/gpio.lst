ca65 V2.17 - Git 180bb082
Main file   : gpio.s
Current file: gpio.s

000000r 1               ;
000000r 1               ; File generated by cc65 v 2.17 - Git 180bb082
000000r 1               ;
000000r 1               	.fopt		compiler,"cc65 v 2.17 - Git 180bb082"
000000r 1               	.setcpu		"6502"
000000r 1               	.smart		on
000000r 1               	.autoimport	on
000000r 1               	.case		on
000000r 1               	.debuginfo	off
000000r 1               	.importzp	sp, sreg, regsave, regbank
000000r 1               	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
000000r 1               	.macpack	longbranch
000000r 2               .macro  jeq     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                       bne     *+5
000000r 2                       jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               beq     Target
000000r 2                       .else
000000r 2                               bne     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jne     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               beq     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bne     Target
000000r 2                       .else
000000r 2                               beq     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jmi     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bpl     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bmi     Target
000000r 2                       .else
000000r 2                               bpl     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jpl     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bmi     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bpl     Target
000000r 2                       .else
000000r 2                               bmi     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jcs     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bcc     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bcs     Target
000000r 2                       .else
000000r 2                               bcc     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jcc     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bcs     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bcc     Target
000000r 2                       .else
000000r 2                               bcs     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jvs     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bvc     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bvs     Target
000000r 2                       .else
000000r 2                               bvc     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jvc     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bvs     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bvc     Target
000000r 2                       .else
000000r 2                               bvs     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               
000000r 1               	.export		_gpio_init
000000r 1               	.export		_gpio_write
000000r 1               	.export		_gpio_read
000000r 1               
000000r 1               ; ---------------------------------------------------------------
000000r 1               ; signed char __near__ gpio_init (unsigned long, unsigned char)
000000r 1               ; ---------------------------------------------------------------
000000r 1               
000000r 1               .segment	"CODE"
000000r 1               
000000r 1               .proc	_gpio_init: near
000000r 1               
000000r 1               .segment	"CODE"
000000r 1               
000000r 1  A0 0A        	ldy     #$0A
000002r 1  20 rr rr     	jsr     subysp
000005r 1  A0 0E        	ldy     #$0E
000007r 1  20 rr rr     	jsr     ldeaxysp
00000Ar 1  A6 rr        	ldx     sreg+1
00000Cr 1  A5 rr        	lda     sreg
00000Er 1  A0 08        	ldy     #$08
000010r 1  20 rr rr     	jsr     staxysp
000013r 1  A0 0E        	ldy     #$0E
000015r 1  20 rr rr     	jsr     ldeaxysp
000018r 1  20 rr rr     	jsr     pusheax
00001Br 1  A2 FF        	ldx     #$FF
00001Dr 1  8A           	txa
00001Er 1  20 rr rr     	jsr     tosand0ax
000021r 1  A0 06        	ldy     #$06
000023r 1  20 rr rr     	jsr     staxysp
000026r 1  29 0F        	and     #$0F
000028r 1  A0 05        	ldy     #$05
00002Ar 1  91 rr        	sta     (sp),y
00002Cr 1  C8           	iny
00002Dr 1  B1 rr        	lda     (sp),y
00002Fr 1  29 F0        	and     #$F0
000031r 1  C9 A0        	cmp     #$A0
000033r 1  D0 18        	bne     L000B
000035r 1  A0 09        	ldy     #$09
000037r 1  20 rr rr     	jsr     ldaxysp
00003Ar 1  20 rr rr     	jsr     incax1
00003Dr 1  A0 03        	ldy     #$03
00003Fr 1  20 rr rr     	jsr     staxysp
000042r 1  A0 09        	ldy     #$09
000044r 1  20 rr rr     	jsr     ldaxysp
000047r 1  20 rr rr     	jsr     incax3
00004Ar 1  4C rr rr     	jmp     L0099
00004Dr 1  A0 09        L000B:	ldy     #$09
00004Fr 1  20 rr rr     	jsr     ldaxysp
000052r 1  A0 03        	ldy     #$03
000054r 1  20 rr rr     	jsr     staxysp
000057r 1  A0 09        	ldy     #$09
000059r 1  20 rr rr     	jsr     ldaxysp
00005Cr 1  20 rr rr     	jsr     incax2
00005Fr 1  A0 01        L0099:	ldy     #$01
000061r 1  20 rr rr     	jsr     staxysp
000064r 1  A0 0A        	ldy     #$0A
000066r 1  B1 rr        	lda     (sp),y
000068r 1  D0 28        	bne     L0018
00006Ar 1  A0 02        	ldy     #$02
00006Cr 1  20 rr rr     	jsr     ldaxysp
00006Fr 1  85 rr        	sta     ptr1
000071r 1  86 rr        	stx     ptr1+1
000073r 1  A0 00        	ldy     #$00
000075r 1  B1 rr        	lda     (ptr1),y
000077r 1  91 rr        	sta     (sp),y
000079r 1  A0 05        	ldy     #$05
00007Br 1  B1 rr        	lda     (sp),y
00007Dr 1  A8           	tay
00007Er 1  A9 01        	lda     #$01
000080r 1  A2 00        	ldx     #$00
000082r 1  20 rr rr     	jsr     aslaxy
000085r 1  49 FF        	eor     #$FF
000087r 1  A0 00        	ldy     #$00
000089r 1  31 rr        	and     (sp),y
00008Br 1  91 rr        	sta     (sp),y
00008Dr 1  A0 02        	ldy     #$02
00008Fr 1  4C rr rr     	jmp     L009E
000092r 1  A0 02        L0018:	ldy     #$02
000094r 1  20 rr rr     	jsr     ldaxysp
000097r 1  85 rr        	sta     ptr1
000099r 1  86 rr        	stx     ptr1+1
00009Br 1  A0 00        	ldy     #$00
00009Dr 1  B1 rr        	lda     (ptr1),y
00009Fr 1  91 rr        	sta     (sp),y
0000A1r 1  A0 05        	ldy     #$05
0000A3r 1  B1 rr        	lda     (sp),y
0000A5r 1  A8           	tay
0000A6r 1  A9 01        	lda     #$01
0000A8r 1  A2 00        	ldx     #$00
0000AAr 1  20 rr rr     	jsr     aslaxy
0000ADr 1  A0 00        	ldy     #$00
0000AFr 1  11 rr        	ora     (sp),y
0000B1r 1  91 rr        	sta     (sp),y
0000B3r 1  A0 02        	ldy     #$02
0000B5r 1  20 rr rr     	jsr     ldaxysp
0000B8r 1  85 rr        	sta     ptr1
0000BAr 1  86 rr        	stx     ptr1+1
0000BCr 1  A0 00        	ldy     #$00
0000BEr 1  B1 rr        	lda     (sp),y
0000C0r 1  91 rr        	sta     (ptr1),y
0000C2r 1  A0 04        	ldy     #$04
0000C4r 1  20 rr rr     	jsr     ldaxysp
0000C7r 1  85 rr        	sta     ptr1
0000C9r 1  86 rr        	stx     ptr1+1
0000CBr 1  A0 00        	ldy     #$00
0000CDr 1  B1 rr        	lda     (ptr1),y
0000CFr 1  91 rr        	sta     (sp),y
0000D1r 1  A0 05        	ldy     #$05
0000D3r 1  B1 rr        	lda     (sp),y
0000D5r 1  A8           	tay
0000D6r 1  A9 01        	lda     #$01
0000D8r 1  A2 00        	ldx     #$00
0000DAr 1  20 rr rr     	jsr     aslaxy
0000DDr 1  49 FF        	eor     #$FF
0000DFr 1  A0 00        	ldy     #$00
0000E1r 1  31 rr        	and     (sp),y
0000E3r 1  91 rr        	sta     (sp),y
0000E5r 1  A0 04        	ldy     #$04
0000E7r 1  20 rr rr     L009E:	jsr     ldaxysp
0000EAr 1  85 rr        	sta     ptr1
0000ECr 1  86 rr        	stx     ptr1+1
0000EEr 1  A0 00        	ldy     #$00
0000F0r 1  B1 rr        	lda     (sp),y
0000F2r 1  91 rr        	sta     (ptr1),y
0000F4r 1  A2 00        	ldx     #$00
0000F6r 1  8A           	txa
0000F7r 1  A0 0F        	ldy     #$0F
0000F9r 1  4C rr rr     	jmp     addysp
0000FCr 1               
0000FCr 1               .endproc
0000FCr 1               
0000FCr 1               ; ---------------------------------------------------------------
0000FCr 1               ; void __near__ gpio_write (unsigned long, unsigned char)
0000FCr 1               ; ---------------------------------------------------------------
0000FCr 1               
0000FCr 1               .segment	"CODE"
0000FCr 1               
0000FCr 1               .proc	_gpio_write: near
0000FCr 1               
0000FCr 1               .segment	"CODE"
0000FCr 1               
0000FCr 1  A0 0A        	ldy     #$0A
0000FEr 1  20 rr rr     	jsr     subysp
000101r 1  A0 0E        	ldy     #$0E
000103r 1  20 rr rr     	jsr     ldeaxysp
000106r 1  A6 rr        	ldx     sreg+1
000108r 1  A5 rr        	lda     sreg
00010Ar 1  A0 08        	ldy     #$08
00010Cr 1  20 rr rr     	jsr     staxysp
00010Fr 1  A0 0E        	ldy     #$0E
000111r 1  20 rr rr     	jsr     ldeaxysp
000114r 1  20 rr rr     	jsr     pusheax
000117r 1  A2 FF        	ldx     #$FF
000119r 1  8A           	txa
00011Ar 1  20 rr rr     	jsr     tosand0ax
00011Dr 1  A0 06        	ldy     #$06
00011Fr 1  20 rr rr     	jsr     staxysp
000122r 1  29 0F        	and     #$0F
000124r 1  A0 05        	ldy     #$05
000126r 1  91 rr        	sta     (sp),y
000128r 1  C8           	iny
000129r 1  B1 rr        	lda     (sp),y
00012Br 1  29 F0        	and     #$F0
00012Dr 1  C9 A0        	cmp     #$A0
00012Fr 1  D0 18        	bne     L004C
000131r 1  A0 09        	ldy     #$09
000133r 1  20 rr rr     	jsr     ldaxysp
000136r 1  20 rr rr     	jsr     incax1
000139r 1  A0 03        	ldy     #$03
00013Br 1  20 rr rr     	jsr     staxysp
00013Er 1  A0 09        	ldy     #$09
000140r 1  20 rr rr     	jsr     ldaxysp
000143r 1  20 rr rr     	jsr     incax3
000146r 1  4C rr rr     	jmp     L00A1
000149r 1  A0 09        L004C:	ldy     #$09
00014Br 1  20 rr rr     	jsr     ldaxysp
00014Er 1  A0 03        	ldy     #$03
000150r 1  20 rr rr     	jsr     staxysp
000153r 1  A0 09        	ldy     #$09
000155r 1  20 rr rr     	jsr     ldaxysp
000158r 1  20 rr rr     	jsr     incax2
00015Br 1  A0 01        L00A1:	ldy     #$01
00015Dr 1  20 rr rr     	jsr     staxysp
000160r 1  A0 0A        	ldy     #$0A
000162r 1  B1 rr        	lda     (sp),y
000164r 1  F0 22        	beq     L0059
000166r 1  A0 04        	ldy     #$04
000168r 1  20 rr rr     	jsr     ldaxysp
00016Br 1  85 rr        	sta     ptr1
00016Dr 1  86 rr        	stx     ptr1+1
00016Fr 1  A0 00        	ldy     #$00
000171r 1  B1 rr        	lda     (ptr1),y
000173r 1  91 rr        	sta     (sp),y
000175r 1  A0 05        	ldy     #$05
000177r 1  B1 rr        	lda     (sp),y
000179r 1  A8           	tay
00017Ar 1  A9 01        	lda     #$01
00017Cr 1  A2 00        	ldx     #$00
00017Er 1  20 rr rr     	jsr     aslaxy
000181r 1  A0 00        	ldy     #$00
000183r 1  11 rr        	ora     (sp),y
000185r 1  4C rr rr     	jmp     L00A8
000188r 1  A0 04        L0059:	ldy     #$04
00018Ar 1  20 rr rr     	jsr     ldaxysp
00018Dr 1  85 rr        	sta     ptr1
00018Fr 1  86 rr        	stx     ptr1+1
000191r 1  A0 00        	ldy     #$00
000193r 1  B1 rr        	lda     (ptr1),y
000195r 1  91 rr        	sta     (sp),y
000197r 1  A0 05        	ldy     #$05
000199r 1  B1 rr        	lda     (sp),y
00019Br 1  A8           	tay
00019Cr 1  A9 01        	lda     #$01
00019Er 1  A2 00        	ldx     #$00
0001A0r 1  20 rr rr     	jsr     aslaxy
0001A3r 1  49 FF        	eor     #$FF
0001A5r 1  A0 00        	ldy     #$00
0001A7r 1  31 rr        	and     (sp),y
0001A9r 1  91 rr        L00A8:	sta     (sp),y
0001ABr 1  A0 04        	ldy     #$04
0001ADr 1  20 rr rr     	jsr     ldaxysp
0001B0r 1  85 rr        	sta     ptr1
0001B2r 1  86 rr        	stx     ptr1+1
0001B4r 1  A0 00        	ldy     #$00
0001B6r 1  B1 rr        	lda     (sp),y
0001B8r 1  91 rr        	sta     (ptr1),y
0001BAr 1  A0 0F        	ldy     #$0F
0001BCr 1  4C rr rr     	jmp     addysp
0001BFr 1               
0001BFr 1               .endproc
0001BFr 1               
0001BFr 1               ; ---------------------------------------------------------------
0001BFr 1               ; unsigned char __near__ gpio_read (unsigned long)
0001BFr 1               ; ---------------------------------------------------------------
0001BFr 1               
0001BFr 1               .segment	"CODE"
0001BFr 1               
0001BFr 1               .proc	_gpio_read: near
0001BFr 1               
0001BFr 1               .segment	"CODE"
0001BFr 1               
0001BFr 1  A0 0A        	ldy     #$0A
0001C1r 1  20 rr rr     	jsr     subysp
0001C4r 1  A0 0D        	ldy     #$0D
0001C6r 1  20 rr rr     	jsr     ldeaxysp
0001C9r 1  A6 rr        	ldx     sreg+1
0001CBr 1  A5 rr        	lda     sreg
0001CDr 1  A0 08        	ldy     #$08
0001CFr 1  20 rr rr     	jsr     staxysp
0001D2r 1  A0 0D        	ldy     #$0D
0001D4r 1  20 rr rr     	jsr     ldeaxysp
0001D7r 1  20 rr rr     	jsr     pusheax
0001DAr 1  A2 FF        	ldx     #$FF
0001DCr 1  8A           	txa
0001DDr 1  20 rr rr     	jsr     tosand0ax
0001E0r 1  A0 06        	ldy     #$06
0001E2r 1  20 rr rr     	jsr     staxysp
0001E5r 1  29 0F        	and     #$0F
0001E7r 1  A0 05        	ldy     #$05
0001E9r 1  91 rr        	sta     (sp),y
0001EBr 1  C8           	iny
0001ECr 1  B1 rr        	lda     (sp),y
0001EEr 1  29 F0        	and     #$F0
0001F0r 1  C9 A0        	cmp     #$A0
0001F2r 1  D0 18        	bne     L007F
0001F4r 1  A0 09        	ldy     #$09
0001F6r 1  20 rr rr     	jsr     ldaxysp
0001F9r 1  20 rr rr     	jsr     incax1
0001FCr 1  A0 03        	ldy     #$03
0001FEr 1  20 rr rr     	jsr     staxysp
000201r 1  A0 09        	ldy     #$09
000203r 1  20 rr rr     	jsr     ldaxysp
000206r 1  20 rr rr     	jsr     incax3
000209r 1  4C rr rr     	jmp     L00AB
00020Cr 1  A0 09        L007F:	ldy     #$09
00020Er 1  20 rr rr     	jsr     ldaxysp
000211r 1  A0 03        	ldy     #$03
000213r 1  20 rr rr     	jsr     staxysp
000216r 1  A0 09        	ldy     #$09
000218r 1  20 rr rr     	jsr     ldaxysp
00021Br 1  20 rr rr     	jsr     incax2
00021Er 1  A0 01        L00AB:	ldy     #$01
000220r 1  20 rr rr     	jsr     staxysp
000223r 1  A0 04        	ldy     #$04
000225r 1  20 rr rr     	jsr     ldaxysp
000228r 1  85 rr        	sta     ptr1
00022Ar 1  86 rr        	stx     ptr1+1
00022Cr 1  A0 00        	ldy     #$00
00022Er 1  B1 rr        	lda     (ptr1),y
000230r 1  91 rr        	sta     (sp),y
000232r 1  A0 05        	ldy     #$05
000234r 1  B1 rr        	lda     (sp),y
000236r 1  A8           	tay
000237r 1  A9 01        	lda     #$01
000239r 1  A2 00        	ldx     #$00
00023Br 1  20 rr rr     	jsr     aslaxy
00023Er 1  A0 00        	ldy     #$00
000240r 1  31 rr        	and     (sp),y
000242r 1  48           	pha
000243r 1  A2 00        	ldx     #$00
000245r 1  68           	pla
000246r 1  F0 02        	beq     L0095
000248r 1  A9 01        	lda     #$01
00024Ar 1  A0 0E        L0095:	ldy     #$0E
00024Cr 1  4C rr rr     	jmp     addysp
00024Fr 1               
00024Fr 1               .endproc
00024Fr 1               
00024Fr 1               
